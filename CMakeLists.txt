cmake_minimum_required(VERSION 2.8)
find_package(CUDA REQUIRED)
if(UNIX)
	find_library(GLEW_LIBRARY NAMES GLEW GLEW HINTS "${CMAKE_SOURCE_DIR}/common/lib/linux/${CMAKE_SYSTEM_PROCESSOR}")
	message("hogehoge" ${GLEW_LIBRARIES})
	IF(NOT GLEW_FOUND)
		message("dslfjds;lkfsjdkl")
	#	set(GLEW_LIBRARIES "${CMAKE_SYSTEM_PROCESSOR}/common/lib/linux/${CMAKE_SYSTEM_PROCESSOR}")
	#	set(GLEW_INCLUDE_DIR "${CMAKE_SYSTEM_PROCESSOR}/common/inc")
	ENDIF(NOT GLEW_FOUND)
	#find_package(GLEW)
	#IF(NOT GLEW_FOUND)
	#	message("foo bar")
	#	message("foo bar" ${GLEW_LIBRARY})
	#	message("foo bar" ${CMAKE_SOURCE_DIR}/common/lib/linux/${CMAKE_SYSTEM_PROCESSOR})
	#	FIND_LIBRARY(GLEW_LIBRARY NAMES glew ilibGLEW.a PATHS "${CMAKE_SOURCE_DIR}/common/lib/linux/${CMAKE_SYSTEM_PROCESSOR}")
	#	FIND_PATH(GLEW_INCLUDE_DIR glew.h "${CMAKE_SOURCE_DIR}/common/inc/GL")
	#	message("foo bar" ${GLEW_LIBRARY})
	#	message("foo bar" ${glew})
	#ENDIF(NOT GLEW_FOUND)
	#message("hogehoge")
	#FIND_LIBRARY(FREEGLUT_LIBRARY NAMES freeglut freeglut.dll PATHS "./common/lib/linux")
	#FIND_PATH(FREEGLUT_INCLUDE_DIR freeglut.h "./common/inc/GL")
endif(UNIX)
#find_path(FREEGLUT_INCLUDE_DIR NAMES GL/freeglut.h)
#find_package(FREEGLUT_LIBRARY NAMES freeglut freeglut_static)
#find_package(FREEGLUT)
message("-- CUDA --")
message("Version: " ${CUDA_VERSION})
message("Library: " ${CUDA_CUDA_LIBRARY})
message("Runtime: " ${CUDA_CUDART_LIBRARY})
include_directories(common/inc)
add_subdirectory(3_Imaging)
#link_directories(./common/lib/Win32/)
#TARGET_LINK_LIBRARIES(freeglut ./common/lib/Win32/freeglut.lib)
#cuda_add_executable(vectorAdd vectorAdd.cu)
