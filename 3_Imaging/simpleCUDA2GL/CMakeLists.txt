cuda_add_executable(sampleFp16 simpleCUDA2GL.cu main.cpp)

if (WIN32)
	set(LIB_DIR ${CMAKE_SOURCE_DIR}/common/lib/Win32)
	TARGET_LINK_LIBRARIES(sampleFp16 ${LIB_DIR}/freeglut.lib)
	TARGET_LINK_LIBRARIES(sampleFp16 ${LIB_DIR}/glew32.lib)
	string(REGEX REPLACE "/" "\\\\" TARGET_BIN1 ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR})
	string(REGEX REPLACE "/" "\\\\" TARGET_BIN2 ${CMAKE_CURRENT_BINARY_DIR})
	string(REGEX REPLACE "/" "\\\\" SOURCE_DLL1 ${LIB_DIR}/glew32.dll)
	string(REGEX REPLACE "/" "\\\\" SOURCE_DLL2 ${LIB_DIR}/freeglut.dll)
	add_custom_command(TARGET sampleFp16 COMMAND copy ${SOURCE_DLL1} ${TARGET_BIN1})
	add_custom_command(TARGET sampleFp16 COMMAND copy ${SOURCE_DLL2} ${TARGET_BIN1})
	add_custom_command(TARGET sampleFp16 COMMAND copy ${SOURCE_DLL1} ${TARGET_BIN2})
	add_custom_command(TARGET sampleFp16 COMMAND copy ${SOURCE_DLL2} ${TARGET_BIN2})
elseif (UNIX)
	TARGET_LINK_LIBRARIES(sampleFp16 ${GLEW_LIBRARY})
	TARGET_LINK_LIBRARIES(sampleFp16 GL GLU X11 Xi Xmu glut)
endif (WIN32)

find_package(OpenCV REQUIRED)
if(OpenCV_FOUND)
  include_directories(${OpenCV_INCLUDE_DIRS})
  target_link_libraries(sampleFp16 ${OpenCV_LIBS})
endif(OpenCV_FOUND)
